plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.javalab'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' } // JitPack 저장소 추가
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'// JPA 사용
    implementation 'org.springframework.boot:spring-boot-starter-web'//웹 어플리 케이션 기본
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // querydsl 라이브러리 추가
    // QueryDSL의 핵심 기능을 제공합니다.
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    // QueryDSL의 어노테이션 프로세서를 사용하여 Q-Type 클래스를 생성합니다.
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    // Jakarta EE 어노테이션을 사용하기 위해 필요합니다.
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    // JPA 관련 어노테이션과 인터페이스를 제공합니다.
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // SQL 로그 의존성
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // 위의 두 의존성을 모두 포함하는 밸리데이션 의존성
    //implementation 'org.springframework.boot:spring-boot-starter-validation:3.4.0'

    // modelmapper Dto To Entity 변환작업을 해주는 클래스
    implementation 'org.modelmapper:modelmapper:3.2.0'

    // 롬복 의존성 추가
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Test Case 에서 롬복 사용
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-security:3.3.6'
    testImplementation 'org.springframework.security:spring-security-test'

    // 소셜 로그인
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JWT 설정(Json Web Token 관련 의존성)
    //implementation 'io.jsonwebtoken:jjwt:0.9.1'
    // xml json 변환
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    // 보안
    implementation 'org.springframework.boot:spring-boot-starter-security'
    //유효성 검증
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JWT 관련 의존성 (모두 0.11.5 버전으로 통일)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
     // JWT 구현
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    // JWT JSON 파싱
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // MariaDB  드라이버
    implementation 'org.mariadb.jdbc:mariadb-java-client'


    // Swagger 의존성
    // [스웨거]Springdoc OpenAPI Starter for Spring Boot 3.x
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // Thymeleaf 의존성 추가
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // redis 의존성, redis는 메모리 기반의 key-value 저장소로서, 데이터를 빠르게 저장하고 조회할 수 있는 오픈소스 데이터베이스입니다.
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Thumbnailator 라이브러리 추가
     implementation 'net.coobird:thumbnailator:0.4.20'

    // 포트원 결제 모듈 의존성
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.23'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // Thumbnailator 라이브러리 추가
     implementation 'net.coobird:thumbnailator:0.4.19'

   // Elasticsearch 의존성
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch:3.2.3'
    
    // Elasticsearch Java Client
    implementation 'co.elastic.clients:elasticsearch-java:8.10.4'
    
    // 호환성을 위한 추가 의존성
    implementation 'org.springframework.data:spring-data-elasticsearch:5.2.3'

    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch:3.2.3'
    implementation 'co.elastic.clients:elasticsearch-java:8.10.4'
}

tasks.named('test') {
    useJUnitPlatform()
}

