spring.application.name=withme
server.port=8080

spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mariadb://localhost:3306/withme_test111?serverTimezone=UTC&characterEncoding=UTF-8
#spring.datasource.url=jdbc:log4jdbc:mariadb://shop-database.c5kusk0eqd5l.ap-northeast-2.rds.amazonaws.com:3306/shop_social?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=1234

# HikariCP\uB294 \uCD5C\uB300 10\uAC1C\uC758 \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC5F0\uACB0\uC744 \uAD00\uB9AC
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.validation-timeout=5000

#### JPA
#Hibernate\uB294 MariaDB \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC5D0 \uCD5C\uC801\uD654\uB41C \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uC791\uC5C5\uC744 \uC218\uD589
spring.jpa.database-platform=org.hibernate.dialect.MariaDBDialect

# Entity create mode
spring.jpa.hibernate.ddl-auto=update
# \uB370\uC774\uD130\uBCA0\uC774\uC2A4 \uCD08\uAE30\uD654 \uD30C\uC77C(data_member.sql) \uC790\uB3D9 \uC2E4\uD589 \uC124\uC815
spring.datasource.initialization-mode=always
spring.sql.init.mode=always
spring.sql.init.platform=mariadb

##################################################################################################################
# data.sql\uC744 \uC0AC\uC6A9\uD560 \uB54C \uD14C\uC774\uBE14 \uBC0F \uB370\uC774\uD130 \uC0BD\uC785\uC744 \uC704\uD55C \uC704\uCE58 \uC9C0\uC815
# db \uC774\uB984 \uBC14\uAFB8\uACE0 \uCCAB \uC2E4\uD589\uC2DC \uC8FC\uC11D\uCC98\uB9AC\uD558\uACE0 \uD14C\uC774\uBE14\uC774 \uB9CC\uB4E4\uC5B4\uC9C4 \uD6C4 \uC8FC\uC11D\uD480\uACE0 \uB2E4\uC2DC \uC2E4\uD589\uD558\uBA74
# \uAE30\uBCF8 \uB370\uC774\uD130 \uB4E4\uC5B4\uAC10

#spring.sql.init.data-locations=classpath:data_member.sql,\
#  classpath:data_doctor.sql,\
#  classpath:data_substance.sql,\
#  classpath:data_item.sql, \
#  classpath:data_orders.sql, \
#  classpath:data_orderItem.sql, \
#  classpath:data_itemSub.sql, \
#  classpath:data_survey.sql, \
#  classpath:data_survey_topic.sql, \
#  classpath:data_question.sql, \
#  classpath:data_payment.sql

##################################################################################################################

# Hibernate sql show
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# log display format

# \uB85C\uADF8 \uD328\uD134 \uC124\uC815[\uC218\uC815]
spring.output.ansi.enabled=ALWAYS
#logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %msg%n%ex

# SQL debug
# SQL
logging.level.jdbc.resultset=error
logging.level.jdbc.audit=info

# \uC2DC\uD050\uB9AC\uD2F0 \uB85C\uADF8
logging.level.org.springframework.security=DEBUG
spring.servlet.multipart.enabled=true
#spring.servlet.multipart.location=C:\\upload

# \uD504\uB85C\uC81D\uD2B8 \uB0B4\uBD80\uC5D0 \uB9CC\uB4E0 upload \uD3F4\uB354\uC5D0 \uD30C\uC77C\uC774 \uC5C5\uB85C\uB4DC \uB428.
spring.servlet.multipart.location=upload/

# \uD074\uB77C\uC6B0\uB4DC\uD0C0\uC785 \uBC30\uD3EC\uC2DC \uC5C5\uB85C\uB4DC \uD3F4\uB354
#spring.servlet.multipart.location=/app/build/libs/upload

spring.servlet.multipart.max-request-size=100MB
spring.servlet.multipart.max-file-size=20MB


## \uD30C\uC77C \uC5C5\uB85C\uB4DC \uACBD\uB85C
# 1. \uB85C\uCEEC \uC11C\uBC84 \uD30C\uC77C\uC774 \uC5C5\uB85C\uB4DC \uB418\uC5B4 \uC788\uB294 \uACBD\uB85C
itemImgLocation=c:/shop/item
uploadPath=file:///c:/shop/

petImgLocation=c:/shop/pet
petUploadPath=file:///c:/shop/

postImgLocation=c:/shop/post
postUploadPath=file:///c:/shop/

## \uC704\uC5D0\uB294 \uC708\uB3C4\uC6B0\uC6A9 \uD30C\uC77C \uC5C5\uB85C\uB4DC \uACBD\uB85C

#itemImgLocation=/Users/judykim/Documents/uploads/product
#uploadPath=/Users/judykim/Documents/uploads/product
#
##pet \uC774\uBBF8\uC9C0 \uC5C5\uB85C\uB4DC
#petImgLocation=/Users/judykim/Documents/uploads/pet
#petUploadPath=/Users/judykim/Documents/uploads/pet/
#
##post \uC774\uBBF8\uC9C0 \uC5C5\uB85C\uB4DC
#postImgLocation=/Users/judykim/Documents/uploads/post
#postUploadPath=/Users/judykim/Documents/uploads/post/

# 2. AWS File Upload Path
#com.javalab.boot.upload.path=/home/ec2-user/shop/upload

# 3. \uD074\uB77C\uC6B0\uB4DC \uBC30\uD3EC\uC2DC \uC5C5\uB85C\uB4DC \uACBD\uB85C \uBCC0\uC218
#com.javalab.boot.upload.path=/app/build/libs/upload

# \uC5B4\uD50C\uB9AC\uCF00\uC774\uC158\uC758 url \uC694\uCCAD\uACFC \uB9E4\uD551\uB418\uC5B4 \uC788\uB294 \uD578\uB4E4\uB7EC \uC815\uBCF4 display
logging.level.org.springframework.web=DEBUG
# logging.level.org.springframework.security=trace
logging.level.org.springframework.web.servlet.mvc.method.annotation=TRACE

# \uAE30\uBCF8 batch size \uC124\uC815, \uC8FC\uBB38\uC774 5\uAC74\uC774\uBA74 \uC77C\uBC18\uC801\uC73C\uB85C 5\uBC88\uC758 \uC8FC\uBB38 \uC544\uC774\uD15C\uC5D0 \uB300\uD55C \uC870\uD68C \uCFFC\uB9AC\uAC00 \uBC1C\uC0DD\uD569\uB2C8\uB2E4.
# \uC774\uB54C batch size\uB97C 1000\uC73C\uB85C \uC124\uC815\uD558\uBA74 5\uBC88\uC758 \uC870\uD68C \uCFFC\uB9AC \uB300\uC2E0 1\uBC88\uC758 \uC870\uD68C \uCFFC\uB9AC\uB85C \uCC98\uB9AC\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.
# \uC774\uB807\uAC8C \uC124\uC815\uD558\uBA74 \uC131\uB2A5\uC774 \uD5A5\uC0C1\uB429\uB2C8\uB2E4. \uC608\uB97C\uB4E4\uBA74 in \uCFFC\uB9AC\uB85C \uCC98\uB9AC\uB429\uB2C8\uB2E4. in (1,2,3,4,5)
spring.jpa.properties.hibernate.default_batch_fetch_size=10

# Redis \uC124\uC815
# Redis \uC11C\uBC84\uC758 \uD638\uC2A4\uD2B8 \uC8FC\uC18C (\uB85C\uCEEC\uC5D0\uC11C \uC2E4\uD589 \uC911\uC778 Redis \uC0AC\uC6A9)
spring.data.redis.host=localhost
# Redis \uC11C\uBC84\uC758 \uD3EC\uD2B8 \uBC88\uD638 (\uAE30\uBCF8\uAC12: 6379)
spring.data.redis.port=6379
# Redis \uC11C\uBC84 \uC811\uC18D \uC2DC \uD544\uC694\uD55C \uBE44\uBC00\uBC88\uD638 (\uC124\uC815\uB418\uC9C0 \uC54A\uC740 \uACBD\uC6B0 \uBE48 \uAC12)
spring.data.redis.password=
# Redis \uC5F0\uACB0 \uD0C0\uC784\uC544\uC6C3 (\uBC00\uB9AC\uCD08 \uB2E8\uC704, 6000ms = 6\uCD08)
spring.data.redis.timeout=6000


## \uCE74\uCE74\uC624 \uC18C\uC15C \uB85C\uADF8\uC778
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-id=e3d8de2ba526468db8e264a22b4389b4
spring.security.oauth2.client.registration.kakao.client-secret=H0M3kfo8PijZTKN16n7ovyFkU3GivHHj
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
# \uCD94\uD6C4 AWS \uBC30\uD3EC\uC2DC \uB9AC\uB2E4\uC774\uB809\uD2B8 URI \uC218\uC815 \uD544\uC694
#spring.security.oauth2.client.registration.kakao.redirect_uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.redirectUri=http://localhost:8080/login/oauth2/code/kakao

## \uB124\uC774\uBC84 \uB85C\uADF8\uC778 API \uC124\uC815
spring.security.oauth2.client.registration.naver.client-id=hXYnWsYZiuvXYNUZxohd
spring.security.oauth2.client.registration.naver.client-secret=P5k4IXnCZU
spring.security.oauth2.client.registration.naver.scope=profile
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me


# JWT \uC124\uC815
jwt.issuer=ajufresh@gmail.com
# jwt \uB9CC\uB4E4\uACE0/\uD30C\uC2F1\uD560\uB54C \uC0AC\uC6A9\uD560 \uD0A4\uB85C \uC0AC\uC6A9\uC790\uAC00 \uC784\uC758\uB85C \uC124\uC815\uD560 \uC218 \uC788\uB2E4. \uC774 \uD0A4\uB97C \uC124\uC815\uD568\uC73C\uB85C \uC778\uD574\uC11C \uC554/\uBCF5\uD638\uD654\uC2DC \uD574\uD0B9\uC744 \uBC29\uC9C0\uD560 \uC218 \uC788\uB2E4.
jwt.secret_key=study-springboot
#jwt.expiration_time=86400000
spring.mvc.throw-exception-if-no-handler-found=true
spring.web.resources.add-mappings=false

# WebSocket \uC124\uC815
spring.websocket.path=/ws

# STOMP \uC124\uC815
spring.websocket.stomp.enabled=true
spring.websocket.stomp.endpoint=/stomp
spring.websocket.stomp.allowed-origins=*

# WebSocket \uC138\uC158 \uD0C0\uC784\uC544\uC6C3 \uC124\uC815 (\uBC00\uB9AC\uCD08 \uB2E8\uC704, \uC608: 10\uBD84)
spring.websocket.stomp.client-heartbeat=0,10000
spring.websocket.stomp.server-heartbeat=0,10000

# WebSocket \uBA54\uC2DC\uC9C0 \uD06C\uAE30 \uC81C\uD55C (\uBC14\uC774\uD2B8 \uB2E8\uC704, \uC608: 64KB)
spring.websocket.max-text-message-size=65536

# STOMP \uBA54\uC2DC\uC9C0 \uBE0C\uB85C\uCEE4 \uC124\uC815
spring.websocket.stomp.broker-relay.enabled=false
spring.websocket.stomp.broker-relay.prefix=/topic,/queue

#\uD3EC\uD2B8\uC6D0(PortOne) \uACB0\uC81C API \uC124\uC815
#\uC0C1\uC810 UID(\uB9AC\uC561\uD2B8 \uD658\uACBD\uC124\uC815 \uD30C\uC77C\uC778 .env\uC5D0 \uC124\uC815\uB418\uC5B4 \uC788\uC74C)
portone.merchant-uid=imp47452441
# \uD504\uB9AC\uBDF0\uC6D0 \uAC80\uC0C9 REST API URL
portone.api-key=8521626186245611
# \uD504\uB9AC\uBDF0\uC6D0 \uAC80\uC0C9 API\uB97C \uC0AC\uC6A9\uD558\uAE30 \uC704\uD55C API \uBCC0\uD658
portone.api-secret=HBs3zGr9VDLxRzGfW3UkJ2f33M4PciQCO9Iy2HFsrttCeCGb4kmZyWU2DSovaWzmwoqlw6Xk7mx05mvt

# Elasticsearch \uAE30\uBCF8 \uC124\uC815
#spring.elasticsearch.uris=http://localhost:9200
#spring.data.elasticsearch.repositories.enabled=true
#
## \uD074\uB77C\uC774\uC5B8\uD2B8 \uC5F0\uACB0 \uD0C0\uC784\uC544\uC6C3 \uC124\uC815
#spring.elasticsearch.connection-timeout=5s
#spring.elasticsearch.client.connection-timeout=5s

